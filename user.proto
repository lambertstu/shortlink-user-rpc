syntax = "proto3";

package user;
option go_package = "./user";

message RegisterRequest {
  string username = 1;
  string password = 2;
  string realName = 3;
  string phone = 4;
  string email = 5;
}

message RegisterResponse {
  bool success = 1;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
}

message LogoutRequest {
  string token = 1;
  string username = 2;
}

message LogoutResponse {
  bool success = 1;
}

message GetUserRequest {
  string username = 1;
}

message GetUserResponse {
  string username = 1;
  string realName = 2;
  string phone = 3;
  string email = 4;
}

message IsExistUserRequest{
  string username = 1;
}

message IsExistUserResponse{
  bool success = 1;
}

message isUserLoginRequest{
  string token = 1;
  string username = 2;
}

message isUserLoginResponse{
  bool success = 1;
}

message UpsertUserInfoRequest{
  string username = 1;
  string password = 2;
  string realName = 3;
  string phone = 4;
  string email = 5;
}

message UpsertUserInfoResponse{
  bool success = 1;
}

message CreateGroupRequest{
  string name = 1;
  string username = 2;
}

message CreateGroupResponse{
  string gid = 1;
  string name = 2;
  string username = 3;
  bool success = 4;
}

message UpdateGroupRequest{
  string gid = 1;
  string name = 2;
  string username = 3;
}

message UpdateGroupResponse{
  bool success = 1;
}

message DeleteGroupRequest{
  string gid = 1;
  string username = 2;
}

message DeleteGroupResponse{
  bool success = 1;
}

message DeleteUserRequest{
  string username = 1;
}

message DeleteUserResponse{
  bool success = 1;
}

message GetGroupRequest{
  string gid = 1;
}

message GetGroupResponse{
  string gid = 1;
  string name = 2;
  string username = 3;
}

service User {
  rpc Register(RegisterRequest) returns(RegisterResponse);
  rpc Login(LoginRequest) returns(LoginResponse);
  rpc Logout(LogoutRequest) returns(LogoutResponse);
  rpc GetUserByUsername(GetUserRequest) returns(GetUserResponse);
  rpc IsExistUser(IsExistUserRequest) returns(IsExistUserResponse);
  rpc IsUserLogin(isUserLoginRequest) returns(isUserLoginResponse);
  rpc UpsertUserInfo(UpsertUserInfoRequest) returns(UpsertUserInfoResponse);
  rpc DeleteUser(DeleteUserRequest) returns(DeleteUserResponse);
}

service Group{
  rpc CreateGroup(CreateGroupRequest) returns(CreateGroupResponse);
  rpc UpdateGroup(UpdateGroupRequest) returns(UpdateGroupResponse);
  rpc DeleteGroup(DeleteGroupRequest) returns(DeleteGroupResponse);
  rpc GetGroupByGid(GetGroupRequest) returns(GetGroupResponse);
}