// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package server

import (
	"context"

	"github.com/lambertstu/shortlink-user-rpc/internal/logic/group"
	"github.com/lambertstu/shortlink-user-rpc/internal/svc"
	"github.com/lambertstu/shortlink-user-rpc/pb/user"
)

type GroupServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedGroupServer
}

func NewGroupServer(svcCtx *svc.ServiceContext) *GroupServer {
	return &GroupServer{
		svcCtx: svcCtx,
	}
}

func (s *GroupServer) CreateGroup(ctx context.Context, in *user.CreateGroupRequest) (*user.CreateGroupResponse, error) {
	l := grouplogic.NewCreateGroupLogic(ctx, s.svcCtx)
	return l.CreateGroup(in)
}

func (s *GroupServer) UpdateGroup(ctx context.Context, in *user.UpdateGroupRequest) (*user.UpdateGroupResponse, error) {
	l := grouplogic.NewUpdateGroupLogic(ctx, s.svcCtx)
	return l.UpdateGroup(in)
}

func (s *GroupServer) DeleteGroup(ctx context.Context, in *user.DeleteGroupRequest) (*user.DeleteGroupResponse, error) {
	l := grouplogic.NewDeleteGroupLogic(ctx, s.svcCtx)
	return l.DeleteGroup(in)
}

func (s *GroupServer) GetGroupByGid(ctx context.Context, in *user.GetGroupRequest) (*user.GetGroupResponse, error) {
	l := grouplogic.NewGetGroupByGidLogic(ctx, s.svcCtx)
	return l.GetGroupByGid(in)
}
